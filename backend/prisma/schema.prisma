// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int          @id @default(autoincrement())
  username        String       @unique
  email           String       @unique
  password        String
  userMoodScores  Json         @default("{}")
  isVerified      Boolean      @default(false)
  UserAnswer      UserAnswer[]
  recommendedSongs RecommendedSong[]
}

model UserAnswer {
  id         Int                 @id @default(autoincrement())
  user       User                @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  answers    QuestionAndAnswer[]
  userId     Int
  mood       String
}

model QuestionAndAnswer {
  id           Int         @id @default(autoincrement())
  question     String
  answer       String
  UserAnswer   UserAnswer? @relation(fields: [userAnswerId], references: [id])
  userAnswerId Int?
}

model Song {
  id               Int      @id @default(autoincrement())
  title            String
  artist           String
  mood             String
  lyrics           String
  songMoodScores   Json     @default("{}")
  spotifyId        String?
  recommendedSongs RecommendedSong[]
}

model RecommendedSong {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  song   Song @relation(fields: [songId], references: [id])
  userId Int
  songId Int
}